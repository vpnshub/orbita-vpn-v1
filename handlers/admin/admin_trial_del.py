from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import aiosqlite
from loguru import logger

from handlers.database import db
from handlers.admin.admin_kb import get_admin_show_trial_keyboard

router = Router()

class TrialDeleteStates(StatesGroup):
    waiting_for_id = State()

def get_cancel_keyboard():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete_trial")
    return keyboard.as_markup()

@router.callback_query(F.data == "admin_delete_trial")
async def start_delete_trial(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞"""
    try:
        await callback.message.delete()
        
        await callback.message.answer(
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b> –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω.\n"
            "üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–±–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ.\n\n"
            "üî¢ –ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ ID:",
            reply_markup=get_cancel_keyboard(),
            parse_mode="HTML"
        )
        
        await state.set_state(TrialDeleteStates.waiting_for_id)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_admin_show_trial_keyboard()
        )

@router.message(TrialDeleteStates.waiting_for_id)
async def process_delete_trial(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ ID –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞"""
    try:
        trial_id = int(message.text.strip())
        
        async with aiosqlite.connect(db.db_path) as conn:
            conn.row_factory = aiosqlite.Row
            
            async with conn.execute(
                "SELECT name FROM trial_settings WHERE id = ? AND is_enable = 1",
                (trial_id,)
            ) as cursor:
                trial = await cursor.fetchone()
                
            if not trial:
                await message.answer(
                    "‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    reply_markup=get_admin_show_trial_keyboard()
                )
                await state.clear()
                return
                
            await conn.execute(
                "UPDATE trial_settings SET is_enable = 0 WHERE id = ?",
                (trial_id,)
            )
            await conn.commit()
            
        await message.answer(
            f"‚úÖ –ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ '{trial['name']}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.",
            reply_markup=get_admin_show_trial_keyboard()
        )
        logger.info(f"–£–¥–∞–ª–µ–Ω –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ: {trial['name']} (ID: {trial_id})")
        
    except ValueError:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)"
        )
        return
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–±–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞—Ä–∏—Ñ–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=get_admin_show_trial_keyboard()
        )
    finally:
        await state.clear()

@router.callback_query(F.data == "cancel_delete_trial")
async def cancel_delete_trial(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞"""
    await state.clear()
    await callback.message.edit_text(
        "–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=get_admin_show_trial_keyboard()
    ) 