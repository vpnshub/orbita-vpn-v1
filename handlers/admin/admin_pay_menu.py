from aiogram import Router, F
from aiogram.types import CallbackQuery
from loguru import logger
import aiosqlite

from handlers.database import db
from handlers.admin.admin_kb import get_admin_payment_settings_keyboard

router = Router()

@router.callback_query(F.data == "admin_show_payment_settings")
async def show_payment_settings(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º"""
    try:
        if not await db.is_admin(callback.from_user.id):
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è")
            return

        async with aiosqlite.connect(db.db_path) as conn:
            conn.row_factory = aiosqlite.Row
            
            yookassa = await conn.execute(
                "SELECT * FROM yookassa_settings WHERE is_enable = 1 LIMIT 1"
            )
            yookassa_settings = await yookassa.fetchone()
            
            crypto = await conn.execute(
                "SELECT * FROM crypto_settings WHERE is_enable = 1 LIMIT 1"
            )
            crypto_settings = await crypto.fetchone()
            
            codes = await conn.execute(
                "SELECT SUM(sum) as total FROM payments_code WHERE is_enable = 1"
            )
            codes_sum = await codes.fetchone()
            total_sum = codes_sum['total'] if codes_sum['total'] else 0

        yoomoney_text = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ\n" if yookassa_settings else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n"
        if yookassa_settings:
            yoomoney_text += f"‚îî ID –º–∞–≥–∞–∑–∏–Ω–∞: {yookassa_settings['shop_id']}\n"

        crypto_text = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ\n" if crypto_settings else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n"
        if crypto_settings:
            crypto_text += f"‚îî –ú–∏–Ω. —Å—É–º–º–∞: {crypto_settings['min_amount']} USDT\n"

        message_text = (
            "üí∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π</b>\n\n"
            "<blockquote>"
            f"üí≥ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Æ–º–∞–Ω–∏:</b>\n{yoomoney_text}\n"
            f"ü™ô <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Crypto Pay:</b>\n{crypto_text}\n"
            f"üé´ <b>–ö–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å—É–º–º—É:</b> {total_sum:.2f} ‚ÇΩ"
            "</blockquote>"
        )

        await callback.message.delete()
        await callback.message.answer(
            message_text,
            reply_markup=get_admin_payment_settings_keyboard(),
            parse_mode="HTML"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        await callback.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫",
            show_alert=True
        ) 