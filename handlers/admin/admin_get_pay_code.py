from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from handlers.database import db
import os
from datetime import datetime
from loguru import logger

router = Router()

@router.callback_query(F.data == "admin_get_all_payments_code")
async def get_all_payment_codes(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∫–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã"""
    try:
        payment_codes = await db.get_all_payment_codes()
        
        if not payment_codes:
            await callback.answer("–ö–æ–¥—ã –æ–ø–ª–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç", show_alert=True)
            return
        
        os.makedirs('temp', exist_ok=True)
        
        current_time = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f'temp/payment_codes_{current_time}.txt'
        
        with open(filename, 'w', encoding='utf-8') as file:
            for code in payment_codes:
                file.write('-' * 50 + '\n')
                file.write(f"–ö–æ–¥: {code['pay_code']}\n")
                file.write(f"–°—É–º–º–∞: {code['sum']} ‚ÇΩ\n")
                file.write(f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if code['is_enable'] else '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n")
                file.write(f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {code['create_date']}\n")
            file.write('-' * 50 + '\n')
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        document = FSInputFile(filename)
        await callback.message.answer_document(
            document,
            caption="üìÑ –í—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã"
        )
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(filename)
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –∫–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã: {e}")
        await callback.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞",
            show_alert=True
        ) 