from aiogram import Router, F
from aiogram.types import CallbackQuery
from loguru import logger

from handlers.user.user_kb import get_user_instructions_keyboard, get_back_keyboard

router = Router()

@router.callback_query(F.data == "lk_instructions")
async def show_instructions_menu(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")
    try:
        await callback.message.delete()
        
        await callback.message.answer(
            "üìñ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é üì°",
            reply_markup=get_user_instructions_keyboard()
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        ) 

@router.callback_query(F.data == "instructions_android")
async def show_android_instructions(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è Android"""

    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")
    try:
        await callback.message.delete()
        
        await callback.message.answer(
        f"üì± <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Android</b>\n\n"
        f"<blockquote>"
        f"1. –ó–∞—Ö–æ–¥–∏–º –≤ Play Market\n"
        f"2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Hiddify\n"
        f"3. –ó–∞—Ö–æ–¥–∏–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        f"4. –ù–∞–∂–∏–º–∞–µ–º '+'  \n"
        f"5. –í—ã–±–∏—Ä–∞–µ–º '–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞' (–ø–µ—Ä–µ–¥ —ç—Ç–∏–º, –Ω–∞–¥–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –±–æ—Ç '–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–ª—é—á')\n"
        f"6. –ì–æ—Ç–æ–≤–æ!\n"
        f"</blockquote>",
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è Android: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "instructions_ios")
async def show_ios_instructions(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è iOS"""

    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")
    try:
        await callback.message.delete()
        
        await callback.message.answer(
        f"üì± <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è IOS</b>\n\n"
        f"<blockquote>"
        f"1. –ó–∞—Ö–æ–¥–∏–º –≤ App Store\n"
        f"2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º v2raytun\n"
        f"3. –ó–∞—Ö–æ–¥–∏–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
        f"4. –ù–∞–∂–∏–º–∞–µ–º '+'  \n"
        f"5. –í—ã–±–∏—Ä–∞–µ–º '–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞' (–ø–µ—Ä–µ–¥ —ç—Ç–∏–º, –Ω–∞–¥–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –±–æ—Ç '–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–ª—é—á')\n"
        f"6. –ì–æ—Ç–æ–≤–æ!\n"
        f"</blockquote>",
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è IOS: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "instructions_windows")
async def show_windows_instructions(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è Windows"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")
    try:
        await callback.message.delete()
        
        await callback.message.answer(
        f"üíª <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Windows</b>\n\n"
        f"<blockquote>"
        f"1. –°–∫–∞—á–∏–≤–∞–π <a href='https://github.com/hiddify/hiddify-config/releases/download/v2.0.1/hiddify-config-v2.0.1-windows-x64.exe'>—Ñ–∞–π–ª</a> \n"
        f"2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π –Ω–∞ –ü–ö –∏ –Ω–∞–∂–∏–º–∞–µ–º '–Ω–∞—á–∞—Ç—å'\n"
        f"3. '–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å'\n"
        f"4. –í—ã–±–∏—Ä–∞–µ–º '–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞' (–ø–µ—Ä–µ–¥ —ç—Ç–∏–º, –Ω–∞–¥–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –±–æ—Ç '–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–ª—é—á')  \n"
        f"5. –ù–∞–∂–∏–º–∞–µ–º '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏'\n"
        f"6. –í—ã–±–∏—Ä–∞–µ–º '–†–µ–≥–∏–æ–Ω (–¥—Ä—É–≥–æ–π)'\n"
        f"7. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ <b><pre>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</pre></b> –ù–∞ —è—Ä–ª—ã–∫–µ —Å—Ç–∞–≤–∏–º –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∏–ª–∏ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        f"8. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≥–ª–∞–≤–Ω—É—é, –Ω–∞–∂–∏–º–∞–µ–º —Å–ø—Ä–∞–≤–∞ 2 –ø–æ–ª–∑—É–Ω–∫–∞ –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ä–µ–∂–∏–º 'VPN' \n"
        f"9. –ì–æ—Ç–æ–≤–æ!\n"
        f"</blockquote>",
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è Android: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.callback_query(F.data == "instructions_macos")
async def show_macos_instructions(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è MacOS"""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback: {callback.data}")

    try:
        await callback.message.delete()
        
        await callback.message.answer(
        f"üíª <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è MacOS</b>\n\n"
        f"<blockquote>"
        f"1. –ó–∞—Ö–æ–¥–∏–º –≤ App Store  \n"
        f"2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Hiddify \n"
        f"3. –ó–∞—Ö–æ–¥–∏–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ \n"
        f"4. –ù–∞–∂–∏–º–∞–µ–º '+'  \n"
        f"5. –í—ã–±–∏—Ä–∞–µ–º '–î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞' (–ø–µ—Ä–µ–¥ —ç—Ç–∏–º, –Ω–∞–¥–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –±–æ—Ç '–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–ª—é—á')\n"
        f"6. –ì–æ—Ç–æ–≤–æ!\n"
        f"</blockquote>",
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è Android: {e}")
        await callback.message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
